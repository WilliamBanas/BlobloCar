// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  // binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id         Int      @id @default(autoincrement())
  name       String   @unique
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
  users      User[]
}

model User {
  id         Int       @id @default(autoincrement())
  lastname   String
  firstname  String
  email      String    @unique
  password   String
  image      String
  role       Role      @relation(fields: [role_id], references: [id])
  role_id    Int
  created_at DateTime  @default(now())
  updated_at DateTime  @updatedAt
  travels    Travel[]
  bookings   Booking[]
  reviews    Review[]
}

model Travel {
  id                Int       @id @default(autoincrement())
  description       String
  start_location    String
  end_location      String
  date              DateTime
  capacity          Int
  deviation_allowed Boolean
  user              User      @relation(fields: [user_id], references: [id])
  user_id           Int
  created_at        DateTime  @default(now())
  updated_at        DateTime  @updatedAt
  bookings          Booking[]
  reviews           Review[]
}

model Booking {
  id              Int      @id @default(autoincrement())
  status          String
  pickup_location String
  comment         String
  nb_passengers   Int
  travel          Travel   @relation(fields: [travel_id], references: [id])
  travel_id       Int
  user            User     @relation(fields: [user_id], references: [id])
  user_id         Int
  created_at      DateTime @default(now())
  updated_at      DateTime @updatedAt
}

model Review {
  id         Int      @id @default(autoincrement())
  title      String
  date       DateTime
  rating     Float
  comment    String
  travel     Travel   @relation(fields: [travel_id], references: [id])
  travel_id  Int
  user       User     @relation(fields: [user_id], references: [id])
  user_id    Int
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}
